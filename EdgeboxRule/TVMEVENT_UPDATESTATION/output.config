(function (){
    load("UTILS");
    var ruleProperties = {
        title : 'TVM Event Update Station',
        tenant : 'LAM',
        thingType : 'TVMEvent',
        thingTypeCode : 'TVMEVENT',
        stationThingTypeCode: 'STATION'
    };
    
    logHeader = ruleProperties.title;
    gLogState = true;

    // START log of rule
    printLog("======================================= "+logHeader+"=============================================");
    
    if(thingTypeCode !== "TVMEVENTS"){
        return false;
    }

    if(source === "FPTBRIDGETVMEVENTS" || source === "SERVICES"){
   // Validate Source FTP only
     
    var udfs = {
        facId : getUDFvalue("FACID"),
        deviceId : getUDFvalue("DEVICE_ID"),
        eventCode : getUDFvalue("EventCode"),
        setEvent : getUDFvalue("SET_EVENT_STATE"),
        clearEvent : getUDFvalue("CLEAR_EVENT_STATE"),
        messageId : getUDFvalue("SET_MESSAGE_ID")
    }
    var eventCodeThing = GetThingByThingTypeCode('EVENTCODES', udfs.eventCode);
    if(eventCodeThing){
        udfs.priority = eventCodeThing.getUdf("Priority");
    }

    var TVMEvent_Props = {
        messageId : udfs.messageId,
        eventCode : udfs.eventCode,
        eventType : ""
    };
    
    printLog("udfs.setEvent::: "+udfs.setEvent);
    printLog("udfs.clearEvent::: "+udfs.clearEvent);
    
    if(udfs.setEvent && udfs.clearEvent){
        
        printLog("There is a CLEAR event! ");
        TVMEvent_Props.eventType = "CLEAR";
        
        
        appendUDF('Dispatch', 'false');
        appendUDF('DispatchedAssociate', '');
        appendUDF('DispatchStatus', 'UNASSIGNED');
        
        
        //Always show Event 140 in Open Events Report
        if(udfs.eventCode == "140"){
            appendUDF('Cleared', 'false');
        }else {
            appendUDF('Cleared', 'true');
        }
        
    }else if(udfs.setEvent && !udfs.clearEvent){
        
        printLog("There is a SET event! ");
        TVMEvent_Props.eventType = "SET";
    }else {
        return false;
    }

    // logger.info(JSON.stringify(udfs));
    // logger.info(JSON.stringify(TVMEvent_Props));
    // logger.info(source);

    appendUDF('Priority', udfs.priority || "");
    if(udfs.facId){
        appendUDF('zone', udfs.facId);
    }
    PropertySetter(UDFS);
    updateStation(udfs.facId,TVMEvent_Props);
    
    }else {
        return false
    }

    /* This Function will send an update to STATION thing type
       using its serial number from FACID
    */
    function updateStation(stationSerialNumber, TVMEvent_Props){
        var message = {
            "thingTypeCode": "/"+ruleProperties.tenant+"/"+ruleProperties.stationThingTypeCode,
            "groupCode": ruleProperties.tenant,
            "time": Date.now(),
            "serialNumber": stationSerialNumber,
            "udfs": {
                "TVM_Props":JSON.stringify(TVMEvent_Props),
                "source":"TVMEVENTSFTPRULE"
            }
        };
        message = JSON.stringify(message);
        thingWrapper.sendThingsMessage(message);
    }
}
) ();
